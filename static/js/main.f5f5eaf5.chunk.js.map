{"version":3,"sources":["utils/dataFetcher.js","components/Userlist.js","components/Profile.js","components/Directory.js","App.js","reportWebVitals.js","index.js"],"names":["FAKE_USER_DATA","cat","name","bio","profilePictureUrl","friends","dog","komodo","timeoutByFetchId","Map","Fetch","Object","defineProperty","this","value","Date","now","Math","random","toString","substr","cancelFetch","fetch","timeout","get","_id","clearTimeout","delete","Userlist","props","handleClick","bind","event","onChoose","target","dataset","username","usernames","map","data-username","onClick","React","Component","Profile","state","userData","setState","fetchID","callback","hasOwnProperty","Error","delay","floor","setTimeout","set","fetchUserData","loadUserData","prevProps","isLoading","className","src","alt","Directory","App","currentUsername","handleChoose","handleReturnToDirectoryClick","newUsername","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5f5eaf5.chunk.js","sourcesContent":["// This module exports fake data fetching functionality.\r\n// In a real app, this would grab data from the internet, but\r\n// this module just waits a little bit before responding.\r\n//\r\n// You don't need to look at this, but you can if you want!\r\n\r\nconst FAKE_USER_DATA = {\r\n    cat: {\r\n      name: 'Kitty Cat',\r\n      bio: \"I'm the coolest cat around. I'm the cat's meow!\",\r\n      profilePictureUrl:\r\n        'https://content.codecademy.com/courses/React/react_lifecycle_cat_profile_picture.jpg',\r\n      friends: ['komodo'],\r\n    },\r\n    dog: {\r\n      name: 'Doggy Dog',\r\n      bio: \"I'm the doggity dog! Woof woof!\",\r\n      profilePictureUrl:\r\n        'https://content.codecademy.com/courses/React/react_lifecycle_dog_profile_picture.jpg',\r\n      friends: ['komodo'],\r\n    },\r\n    komodo: {\r\n      name: 'Lizard Lady',\r\n      bio: \"I'm a Komodo dragon. You'll love me.\",\r\n      profilePictureUrl:\r\n        'https://content.codecademy.com/courses/React/react_lifecycle_komodo_profile_picture.jpg',\r\n      friends: ['cat', 'dog'],\r\n    },\r\n  };\r\n  \r\n  const timeoutByFetchId = new Map();\r\n  \r\n  class Fetch {\r\n    constructor() {\r\n      Object.defineProperty(this, '_id', {\r\n        value: Date.now() + Math.random().toString().substr(2),\r\n      });\r\n    }\r\n  }\r\n  \r\n  export function fetchUserData(username, callback) {\r\n    if (!FAKE_USER_DATA.hasOwnProperty(username)) {\r\n      throw new Error(\r\n        'Invalid username. Make sure it is \"cat\", \"dog\", or \"komodo\".'\r\n      );\r\n    }\r\n  \r\n    const fetch = new Fetch();\r\n  \r\n    const delay = Math.floor(Math.random() * 1000) + 500;\r\n    const timeout = setTimeout(() => {\r\n      timeoutByFetchId.delete(fetch._id);\r\n      callback(FAKE_USER_DATA[username]);\r\n    }, delay);\r\n  \r\n    timeoutByFetchId.set(fetch._id, timeout);\r\n  \r\n    return fetch;\r\n  }\r\n  \r\n  export function cancelFetch(fetch) {\r\n    if (!fetch || typeof fetch !== 'object') {\r\n      return;\r\n    }\r\n    const timeout = timeoutByFetchId.get(fetch._id);\r\n    clearTimeout(timeout);\r\n    timeoutByFetchId.delete(fetch._id);\r\n  }","import React from 'react';\r\n\r\nexport class Userlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    this.props.onChoose(event.target.dataset.username);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.usernames.map((username) => (\r\n          <li key={username}>\r\n            <button data-username={username} onClick={this.handleClick}>\r\n              @{username}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { fetchUserData, cancelFetch } from '../utils/dataFetcher';\r\nimport { Userlist } from './Userlist';\r\n\r\nexport class Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n       userData: null\r\n    }\r\n  }\r\n\r\n  loadUserData() {\r\n    this.setState({ userData: null});\r\n    this.fetchID = fetchUserData(this.props.username, (userData) => {\r\n  this.setState({ userData });\r\n});\r\n  }\r\n  componentDidMount() {\r\n    this.loadUserData();\r\n  }\r\n  componentWillUnmount() {\r\n    cancelFetch(this.fetchID);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n   if (this.props.username !== prevProps.username) {\r\n     cancelFetch(this.fetchID);\r\n     this.loadUserData();\r\n   }\r\n  }\r\n  render() {\r\n    let isLoading;\r\n     this.state.userData === null ? isLoading = true : isLoading = false; \r\n    let className = 'Profile';\r\n    if (isLoading) {\r\n      className += ' loading';\r\n    }\r\n    let name;\r\n    isLoading === true ? name = 'Loading...' : name = this.state.userData.name;\r\n    let bio;\r\n    isLoading === true ? bio = 'Loading bio...' : bio = this.state.userData.bio;\r\n    let friends;\r\n    isLoading === true ? friends = [] : friends = this.state.userData.friends;\r\n    return (\r\n      <div className={className}>\r\n        <div className=\"profile-picture\">\r\n          {!isLoading && (<img src={this.state.userData.profilePictureUrl} alt=\"\" />)}\r\n        </div>\r\n        <div className=\"profile-body\">\r\n          <h2>{name}</h2>\r\n          <h3>@{this.props.username}</h3>\r\n          <p>{bio}</p>\r\n          <h3>My friends</h3>\r\n          <Userlist usernames={friends} onChoose={this.props.onChoose} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Userlist } from './Userlist';\r\n\r\nexport function Directory(props) {\r\n  return (\r\n    <div className=\"Directory\">\r\n      <h2>User directory</h2>\r\n      <Userlist\r\n        usernames={['dog', 'cat', 'komodo']}\r\n        onChoose={props.onChoose}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport { Profile } from './components/Profile';\nimport { Directory } from './components/Directory';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUsername: null,\n    };\n    this.handleChoose = this.handleChoose.bind(this);\n    this.handleReturnToDirectoryClick = this.handleReturnToDirectoryClick.bind(\n      this\n    );\n  }\n\n  handleChoose(newUsername) {\n    this.setState({ currentUsername: newUsername });\n  }\n\n  handleReturnToDirectoryClick() {\n    this.setState({ currentUsername: null });\n  }\n\n  render() {\n    let body;\n    if (this.state.currentUsername) {\n      body = (\n        <Profile\n          username={this.state.currentUsername}\n          onChoose={this.handleChoose}\n        />\n      );\n    } else {\n      body = <Directory onChoose={this.handleChoose} />;\n    }\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>PetBook</h1>\n\n          <nav>\n            {this.state.currentUsername && (\n              <button onClick={this.handleReturnToDirectoryClick}>\n                Return to directory\n              </button>\n            )}\n          </nav>\n        </header>\n\n        <main>{body}</main>\n      </div>\n    );\n  }\n}\n\n//ReactDOM.render(<App />, document.getElementById('app'));\n\n/*class App extends React.Component {\n  \n  render() {\n    return (\n      <div >\n        <h1>ravenous</h1>\n        \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}